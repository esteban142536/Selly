@model Infraestructure.Models.inventario

@{
    ViewBag.Title = "Agregar inventario";
}

@using (Html.BeginForm("Save", "Inventario", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="titulo">
        <h2>Agregar inventario</h2>
        <hr />
    </div>

    <div class="inventario">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            <div class="row" style="text-align: center">
                <div class="col">
                    <p class="text-success">
                        <strong>
                            @* Tienda *@
                            Selly
                        </strong>
                    </p>
                </div>

                <div class="col">
                    <p class="text-success">
                        <strong>
                            @* Usuario *@

                            @{
                                string usuario = "";
                                Infraestructure.Models.usuario usua;
                                if (Session["Usuario"] != null)
                                {
                                    usua = (Infraestructure.Models.usuario)Session["Usuario"];
                                    if (usua != null)
                                    {
                                        usuario = $"{usua.nombre} {usua.apellidos}";
                                    }
                                }
                            }

                            @Html.DisplayNameFor(model => model.idUsuario) @usuario
                        </strong>
                    </p>
                </div>

                <div class="col">
                    <p class="text-success">
                        <strong>
                            @* Fecha de ingreso *@
                            @{
                                var date = DateTime.Now.ToShortDateString();
                            }

                            @Html.DisplayNameFor(model => model.fecha) @date
                        </strong>
                    </p>
                </div>
            </div>

            <div class="card border-primary mb-3" style="max-width: 70rem; margin-left:7%;">
                <div class="card-body">
                    <div class="row" style="margin-left:18%">
                        <div class="col">


                            <br />

                            <input type="button" onclick="updateCano()" value="Entrada" class="btn btn-success"/>
                            <input type="button" onclick="appearSalida()" value="Salida" class="btn btn-success"/>

                            <span id="searchResults"/>


                        </div>

                        <div class="col">
                            <p>
                                @* Proveedor *@
                                Proveedor:
                                <br />
                                @Html.DropDownList("proveedor",
                                         (MultiSelectList)ViewBag.idProveedores,
                                         new { htmlAttributes = new { @class = "form-control" }, multiple = "multiple" })
                            </p>
                        </div>
                    </div>
                </div>
            </div>

            <input class="form-control" list="datalistOptions" placeholder="Buscar producto...">
            <datalist id="datalistOptions">
                <option value="Audifonos">
                <option value="Blusa">
                <option value="Sarten">
                <option value="Cargador">
                <option value="Carro de juguete">
            </datalist>
            <div id="resultadoDetalle">
                @if (Web.ViewModel.Carrito.Instancia.Items.Count() > 0)
                {
                    @Html.Partial("~/Views/Inventario/_ListadoInventario.cshtml", (List<Web.ViewModel.ViewModelInventarioDetalle>)ViewBag.DetalleCarrito)
                }
                else
                {
                <div class="alert alert-warning alert-dismissible fade show" role="alert">
                    La orden no tiene libros asignados
                    <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
            }
                </div>
            <div class="boton" style="margin-left:43%">
                <button type="submit" class="btn btn-success">Agregar</button>
                <button type="button" class="btn btn-success">Cancelar</button>
            </div>
        </div>
    </div>
}

    @section Scripts {

        @Scripts.Render("~/bundles/jqueryval")
        @Scripts.Render("~/bundles/jqueryajax")

<script type="text/javascript">

        //Actualizar cantidad de libros en el carrito
        //Cambio de cantidad en caja de texto
        function updateCantidad(ctr) {
            var txtCantidad = $(ctr);
            var cantidad = txtCantidad.val();
            var id = txtCantidad.data("libroid");
            $.ajax({
                type: "GET",
                dataType: 'text',
                url: "/Inventario/actualizarCantidad",
                data: { "idproducto": id, "cantidad": cantidad },
                success: function (data) {
                    $("#resultadoDetalle").html('');
                    $("#resultadoDetalle").html(data);
                    updateCantLibros();
                }, error: function (xhr, status, error) {
                    console.log("Error: " + error + ", No Error: " + xhr.status);
                },
            });
        }
        //Actualizar cantidad de libros en el menú
        function updateCantLibros() {
            $.ajax({
                type: "GET",
                dataType: 'text',
                url: "/Inventario/actualizarOrdenCantidad",
                success: function (data) {
                    $("#cantidadproducto").html('');
                    $("#cantidadproducto").html(data);
                }, error: function (xhr, status, error) {
                    console.log("Error: " + error + ", No Error: " + xhr.status);
                },
            });
            }


        function updateCano() {
            $.ajax({
                type: "GET",
                dataType: 'text',
                url: "/Inventario/appearEntrada",
                success: function (data) {
                    $("#searchResults").html('');
                    $("#searchResults").html(data);
                }, error: function (xhr, status, error) {
                    console.log("Error: " + error + ", No Error: " + xhr.status);
                },
            });
    }

    function appearSalida() {
        $.ajax({
            type: "GET",
            dataType: 'text',
            url: "/Inventario/AppearSalida",
            success: function (data) {
                $("#searchResults").html('');
                $("#searchResults").html(data);
            }, error: function (xhr, status, error) {
                console.log("Error: " + error + ", No Error: " + xhr.status);
            },
        });
    }
</script>
    }
